{"version":3,"sources":["/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/$_lazy_route_resource lazy","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.chat.css","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.chat.html","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.chat.ts","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.component.ts","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.login.css","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.login.html","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.login.ts","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.module.ts","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.usercontext.ts","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/environments/environment.ts","/Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#chat-card {\\n    width: 80%;\\n    padding: 4em;\\n    margin: auto;\\n    margin-top: 5em;\\n}\\n\\n#chat-card-actions {\\n    text-align: right;\\n}\\n\\n.chat-card-field {\\n    padding: 1em;\\n    width: 90%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.chat.css\n// module id = ../../../../../src/app/app.chat.css\n// module chunks = main","module.exports = \"<section class=\\\"mat-typography\\\">\\n    <mat-card id=\\\"chat-card\\\">\\n        <mat-card-header>\\n            <mat-card-title><h1>ЧАТ</h1></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <mat-form-field class=\\\"chat-card-field\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Укажите логин клиента\\\" />\\n                <button mat-button *ngIf=\\\"value\\\" matSuffix mat-icon-button aria-label=\\\"Очистить\\\" (click)=\\\"username=''\\\">\\n                <mat-icon>close</mat-icon>\\n                </button>\\n            </mat-form-field>              \\n        </mat-card-content>\\n        <mat-card-actions id=\\\"chat-card-actions\\\">\\n            <button mat-raised-button color=\\\"primary\\\" id=\\\"login-button\\\" (click)='onClick()'>Войти</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.chat.html\n// module id = ../../../../../src/app/app.chat.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsercontextService } from './app.usercontext';\n\nimport * as Stomp from 'stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/**\n * @title Main app component\n */\n@Component({\n  selector: 'app-chat',\n  templateUrl: './app.chat.html',\n  styleUrls: ['./app.chat.css']\n})\nexport class ChatComponent implements OnInit{\n\n  private socket = new SockJS('/ws');\n  private stompClient = Stomp.over(this.socket);\n\n  constructor(private router:Router, private uctx: UsercontextService) {\n    \n  }\n\n  ngOnInit(): void {\n    this.stompClient.connect({}, () => this.onStompConnected(), () => this.onStompError());\n  }\n\n  onStompConnected() {\n    console.log(\"Stomp connected\");\n\n    this.stompClient.subscribe('/channel/public', (payload) => this.onStompReceived(payload));\n        this.stompClient.send(\"/app/chat.addUser\",\n            {}, JSON.stringify({sender: this.uctx.username, type: 'JOIN'})\n        );\n  }\n\n  onStompError() {\n    console.log(\"Stomp error\");\n  }\n\n  onStompReceived(payload) {\n    var message = JSON.parse(payload.body);\n    console.log('payload = ', payload.body );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.chat.ts","import { Component } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n/**\n * @title Main app component\n */\n@Component({\n  selector: 'app-root',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class AppComponent {\n  constructor(private router:Router) {\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#login-card {\\n    width: 40%;\\n    padding: 4em;\\n    margin: auto;\\n    margin-top: 10em;\\n}\\n\\n#login-card-actions {\\n    text-align: center;\\n}\\n\\n.login-card-field {\\n    padding: 1em;\\n    width: 90%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.login.css\n// module id = ../../../../../src/app/app.login.css\n// module chunks = main","module.exports = \"<section class=\\\"mat-typography\\\">\\n    <mat-card id=\\\"login-card\\\">\\n        <mat-card-header>\\n          <mat-card-title><h1>Тестовый доступ</h1></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <mat-form-field class=\\\"login-card-field\\\">\\n              <input matInput type=\\\"text\\\" placeholder=\\\"Укажите логин (email) клиента\\\" [(ngModel)]=\\\"$username\\\"\\n                [formControl]=\\\"$emailFormControl\\\"/>\\n              <button mat-button *ngIf=\\\"$username\\\" matSuffix mat-icon-button aria-label=\\\"Очистить\\\" (click)=\\\"$username=''\\\">\\n                <mat-icon>close</mat-icon>\\n              </button>\\n              <mat-error *ngIf=\\\"$emailFormControl.hasError('required')\\\">\\n                  Логин <strong>обязателен</strong>\\n              </mat-error>\\n            </mat-form-field>              \\n        </mat-card-content>\\n        <mat-card-actions id=\\\"login-card-actions\\\">\\n          <button mat-raised-button color=\\\"primary\\\" (click)='$onLogonClick()'>Войти</button>\\n        </mat-card-actions>\\n    </mat-card>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.login.html\n// module id = ../../../../../src/app/app.login.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { NgModel, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsercontextService } from './app.usercontext';\n\n/**\n * @title Main app component\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './app.login.html',\n  styleUrls: ['./app.login.css']\n})\nexport class LoginComponent {\n\n  $username: string;\n  $emailFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  \n  constructor(private router:Router, private uctx: UsercontextService) {\n  }  \n\n  public $onLogonClick() {\n    if(!this.$username) {\n      return;\n    }\n\n    this.uctx.username = this.$username;\n    this.router.navigateByUrl('/chat');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.login.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatGridListModule, MatIcon} from '@angular/material';\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './app.login';\nimport { ChatComponent } from './app.chat';\nimport { UsercontextService } from './app.usercontext';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'chat', component: ChatComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChatComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes, {}),\n    FormsModule, ReactiveFormsModule,\n    BrowserModule,\n    NoopAnimationsModule,\n    MatGridListModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  providers: [\n    UsercontextService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.module.ts","export class UsercontextService {\n    public username: string;\n}\n\n\n// WEBPACK FOOTER //\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/app/app.usercontext.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { UsercontextService } from './app/app.usercontext';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/yurij/Projects/spring-boot-websocket-chat-demo/src/main/ngapp/src/main.ts"],"sourceRoot":"webpack:///"}